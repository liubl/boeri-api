<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lboeri.boeriapi.dao.common.ApiSourceEntityMapper">
  <resultMap id="BaseResultMap" type="com.lboeri.boeriapi.dao.common.entity.ApiSourceEntity">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="dsid" jdbcType="INTEGER" property="dsid" />
    <result column="dbtype" jdbcType="VARCHAR" property="dbtype" />
    <result column="driverclassname" jdbcType="VARCHAR" property="driverclassname" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="initialsize" jdbcType="INTEGER" property="initialsize" />
    <result column="maxactive" jdbcType="INTEGER" property="maxactive" />
    <result column="minidle" jdbcType="INTEGER" property="minidle" />
    <result column="maxwait" jdbcType="INTEGER" property="maxwait" />
    <result column="removeabandoned" jdbcType="CHAR" property="removeabandoned" />
    <result column="removeabandonedtimeout" jdbcType="INTEGER" property="removeabandonedtimeout" />
    <result column="timebetweenevictionrunsmillis" jdbcType="INTEGER" property="timebetweenevictionrunsmillis" />
    <result column="minevictableidletimemillis" jdbcType="INTEGER" property="minevictableidletimemillis" />
    <result column="validationquery" jdbcType="VARCHAR" property="validationquery" />
    <result column="testwhileidle" jdbcType="CHAR" property="testwhileidle" />
    <result column="testonborrow" jdbcType="CHAR" property="testonborrow" />
    <result column="testonreturn" jdbcType="CHAR" property="testonreturn" />
    <result column="poolpreparedstatements" jdbcType="CHAR" property="poolpreparedstatements" />
    <result column="maxpoolprestatperconnsize" jdbcType="INTEGER" property="maxpoolprestatperconnsize" />
    <result column="filters" jdbcType="VARCHAR" property="filters" />
    <result column="hooktime" jdbcType="INTEGER" property="hooktime" />
    <result column="hooks" jdbcType="VARCHAR" property="hooks" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, dsid, dbtype, driverclassname, url, username, password, initialsize, maxactive, 
    minidle, maxwait, removeabandoned, removeabandonedtimeout, timebetweenevictionrunsmillis, 
    minevictableidletimemillis, validationquery, testwhileidle, testonborrow, testonreturn, 
    poolpreparedstatements, maxpoolprestatperconnsize, filters, hooktime, hooks, create_by, 
    create_date, update_by, update_date, remarks, del_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from TBL_API_SOURCE
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from TBL_API_SOURCE
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lboeri.boeriapi.dao.common.entity.ApiSourceEntity">
    insert into TBL_API_SOURCE (id, dsid, dbtype, 
      driverclassname, url, username, 
      password, initialsize, maxactive, 
      minidle, maxwait, removeabandoned, 
      removeabandonedtimeout, timebetweenevictionrunsmillis, 
      minevictableidletimemillis, validationquery, 
      testwhileidle, testonborrow, testonreturn, 
      poolpreparedstatements, maxpoolprestatperconnsize, 
      filters, hooktime, hooks, 
      create_by, create_date, update_by, 
      update_date, remarks, del_flag
      )
    values (#{id,jdbcType=VARCHAR}, #{dsid,jdbcType=INTEGER}, #{dbtype,jdbcType=VARCHAR}, 
      #{driverclassname,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{initialsize,jdbcType=INTEGER}, #{maxactive,jdbcType=INTEGER}, 
      #{minidle,jdbcType=INTEGER}, #{maxwait,jdbcType=INTEGER}, #{removeabandoned,jdbcType=CHAR}, 
      #{removeabandonedtimeout,jdbcType=INTEGER}, #{timebetweenevictionrunsmillis,jdbcType=INTEGER}, 
      #{minevictableidletimemillis,jdbcType=INTEGER}, #{validationquery,jdbcType=VARCHAR}, 
      #{testwhileidle,jdbcType=CHAR}, #{testonborrow,jdbcType=CHAR}, #{testonreturn,jdbcType=CHAR}, 
      #{poolpreparedstatements,jdbcType=CHAR}, #{maxpoolprestatperconnsize,jdbcType=INTEGER}, 
      #{filters,jdbcType=VARCHAR}, #{hooktime,jdbcType=INTEGER}, #{hooks,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lboeri.boeriapi.dao.common.entity.ApiSourceEntity">
    insert into TBL_API_SOURCE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dsid != null">
        dsid,
      </if>
      <if test="dbtype != null">
        dbtype,
      </if>
      <if test="driverclassname != null">
        driverclassname,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="initialsize != null">
        initialsize,
      </if>
      <if test="maxactive != null">
        maxactive,
      </if>
      <if test="minidle != null">
        minidle,
      </if>
      <if test="maxwait != null">
        maxwait,
      </if>
      <if test="removeabandoned != null">
        removeabandoned,
      </if>
      <if test="removeabandonedtimeout != null">
        removeabandonedtimeout,
      </if>
      <if test="timebetweenevictionrunsmillis != null">
        timebetweenevictionrunsmillis,
      </if>
      <if test="minevictableidletimemillis != null">
        minevictableidletimemillis,
      </if>
      <if test="validationquery != null">
        validationquery,
      </if>
      <if test="testwhileidle != null">
        testwhileidle,
      </if>
      <if test="testonborrow != null">
        testonborrow,
      </if>
      <if test="testonreturn != null">
        testonreturn,
      </if>
      <if test="poolpreparedstatements != null">
        poolpreparedstatements,
      </if>
      <if test="maxpoolprestatperconnsize != null">
        maxpoolprestatperconnsize,
      </if>
      <if test="filters != null">
        filters,
      </if>
      <if test="hooktime != null">
        hooktime,
      </if>
      <if test="hooks != null">
        hooks,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="dsid != null">
        #{dsid,jdbcType=INTEGER},
      </if>
      <if test="dbtype != null">
        #{dbtype,jdbcType=VARCHAR},
      </if>
      <if test="driverclassname != null">
        #{driverclassname,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="initialsize != null">
        #{initialsize,jdbcType=INTEGER},
      </if>
      <if test="maxactive != null">
        #{maxactive,jdbcType=INTEGER},
      </if>
      <if test="minidle != null">
        #{minidle,jdbcType=INTEGER},
      </if>
      <if test="maxwait != null">
        #{maxwait,jdbcType=INTEGER},
      </if>
      <if test="removeabandoned != null">
        #{removeabandoned,jdbcType=CHAR},
      </if>
      <if test="removeabandonedtimeout != null">
        #{removeabandonedtimeout,jdbcType=INTEGER},
      </if>
      <if test="timebetweenevictionrunsmillis != null">
        #{timebetweenevictionrunsmillis,jdbcType=INTEGER},
      </if>
      <if test="minevictableidletimemillis != null">
        #{minevictableidletimemillis,jdbcType=INTEGER},
      </if>
      <if test="validationquery != null">
        #{validationquery,jdbcType=VARCHAR},
      </if>
      <if test="testwhileidle != null">
        #{testwhileidle,jdbcType=CHAR},
      </if>
      <if test="testonborrow != null">
        #{testonborrow,jdbcType=CHAR},
      </if>
      <if test="testonreturn != null">
        #{testonreturn,jdbcType=CHAR},
      </if>
      <if test="poolpreparedstatements != null">
        #{poolpreparedstatements,jdbcType=CHAR},
      </if>
      <if test="maxpoolprestatperconnsize != null">
        #{maxpoolprestatperconnsize,jdbcType=INTEGER},
      </if>
      <if test="filters != null">
        #{filters,jdbcType=VARCHAR},
      </if>
      <if test="hooktime != null">
        #{hooktime,jdbcType=INTEGER},
      </if>
      <if test="hooks != null">
        #{hooks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lboeri.boeriapi.dao.common.entity.ApiSourceEntity">
    update TBL_API_SOURCE
    <set>
      <if test="dsid != null">
        dsid = #{dsid,jdbcType=INTEGER},
      </if>
      <if test="dbtype != null">
        dbtype = #{dbtype,jdbcType=VARCHAR},
      </if>
      <if test="driverclassname != null">
        driverclassname = #{driverclassname,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="initialsize != null">
        initialsize = #{initialsize,jdbcType=INTEGER},
      </if>
      <if test="maxactive != null">
        maxactive = #{maxactive,jdbcType=INTEGER},
      </if>
      <if test="minidle != null">
        minidle = #{minidle,jdbcType=INTEGER},
      </if>
      <if test="maxwait != null">
        maxwait = #{maxwait,jdbcType=INTEGER},
      </if>
      <if test="removeabandoned != null">
        removeabandoned = #{removeabandoned,jdbcType=CHAR},
      </if>
      <if test="removeabandonedtimeout != null">
        removeabandonedtimeout = #{removeabandonedtimeout,jdbcType=INTEGER},
      </if>
      <if test="timebetweenevictionrunsmillis != null">
        timebetweenevictionrunsmillis = #{timebetweenevictionrunsmillis,jdbcType=INTEGER},
      </if>
      <if test="minevictableidletimemillis != null">
        minevictableidletimemillis = #{minevictableidletimemillis,jdbcType=INTEGER},
      </if>
      <if test="validationquery != null">
        validationquery = #{validationquery,jdbcType=VARCHAR},
      </if>
      <if test="testwhileidle != null">
        testwhileidle = #{testwhileidle,jdbcType=CHAR},
      </if>
      <if test="testonborrow != null">
        testonborrow = #{testonborrow,jdbcType=CHAR},
      </if>
      <if test="testonreturn != null">
        testonreturn = #{testonreturn,jdbcType=CHAR},
      </if>
      <if test="poolpreparedstatements != null">
        poolpreparedstatements = #{poolpreparedstatements,jdbcType=CHAR},
      </if>
      <if test="maxpoolprestatperconnsize != null">
        maxpoolprestatperconnsize = #{maxpoolprestatperconnsize,jdbcType=INTEGER},
      </if>
      <if test="filters != null">
        filters = #{filters,jdbcType=VARCHAR},
      </if>
      <if test="hooktime != null">
        hooktime = #{hooktime,jdbcType=INTEGER},
      </if>
      <if test="hooks != null">
        hooks = #{hooks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lboeri.boeriapi.dao.common.entity.ApiSourceEntity">
    update TBL_API_SOURCE
    set dsid = #{dsid,jdbcType=INTEGER},
      dbtype = #{dbtype,jdbcType=VARCHAR},
      driverclassname = #{driverclassname,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      initialsize = #{initialsize,jdbcType=INTEGER},
      maxactive = #{maxactive,jdbcType=INTEGER},
      minidle = #{minidle,jdbcType=INTEGER},
      maxwait = #{maxwait,jdbcType=INTEGER},
      removeabandoned = #{removeabandoned,jdbcType=CHAR},
      removeabandonedtimeout = #{removeabandonedtimeout,jdbcType=INTEGER},
      timebetweenevictionrunsmillis = #{timebetweenevictionrunsmillis,jdbcType=INTEGER},
      minevictableidletimemillis = #{minevictableidletimemillis,jdbcType=INTEGER},
      validationquery = #{validationquery,jdbcType=VARCHAR},
      testwhileidle = #{testwhileidle,jdbcType=CHAR},
      testonborrow = #{testonborrow,jdbcType=CHAR},
      testonreturn = #{testonreturn,jdbcType=CHAR},
      poolpreparedstatements = #{poolpreparedstatements,jdbcType=CHAR},
      maxpoolprestatperconnsize = #{maxpoolprestatperconnsize,jdbcType=INTEGER},
      filters = #{filters,jdbcType=VARCHAR},
      hooktime = #{hooktime,jdbcType=INTEGER},
      hooks = #{hooks,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>