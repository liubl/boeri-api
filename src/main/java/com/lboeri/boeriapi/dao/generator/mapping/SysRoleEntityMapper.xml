<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lboeri.boeriapi.dao.generator.SysRoleEntityMapper">
  <resultMap id="BaseResultMap" type="com.lboeri.boeriapi.dao.generator.entity.SysRoleEntity">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="ROLE_CODE" jdbcType="VARCHAR" property="roleCode" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="ROLE_DESC" jdbcType="VARCHAR" property="roleDesc" />
    <result column="FUNC_NODE_CODE" jdbcType="VARCHAR" property="funcNodeCode" />
    <result column="ROLE_INHERENT" jdbcType="CHAR" property="roleInherent" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
    <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="IS_USABLE" jdbcType="CHAR" property="isUsable" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, ROLE_CODE, ROLE_NAME, ROLE_DESC, FUNC_NODE_CODE, ROLE_INHERENT, CREATE_USER, 
    CREATE_DATE, UPDATE_USER, UPDATE_DATE, IS_USABLE, REMARK
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SYS_ROLE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from SYS_ROLE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lboeri.boeriapi.dao.generator.entity.SysRoleEntity">
    insert into SYS_ROLE (ID, ROLE_CODE, ROLE_NAME, 
      ROLE_DESC, FUNC_NODE_CODE, ROLE_INHERENT, 
      CREATE_USER, CREATE_DATE, UPDATE_USER, 
      UPDATE_DATE, IS_USABLE, REMARK
      )
    values (#{id,jdbcType=INTEGER}, #{roleCode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{roleDesc,jdbcType=VARCHAR}, #{funcNodeCode,jdbcType=VARCHAR}, #{roleInherent,jdbcType=CHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{isUsable,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lboeri.boeriapi.dao.generator.entity.SysRoleEntity">
    insert into SYS_ROLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="roleCode != null">
        ROLE_CODE,
      </if>
      <if test="roleName != null">
        ROLE_NAME,
      </if>
      <if test="roleDesc != null">
        ROLE_DESC,
      </if>
      <if test="funcNodeCode != null">
        FUNC_NODE_CODE,
      </if>
      <if test="roleInherent != null">
        ROLE_INHERENT,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
      <if test="isUsable != null">
        IS_USABLE,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="funcNodeCode != null">
        #{funcNodeCode,jdbcType=VARCHAR},
      </if>
      <if test="roleInherent != null">
        #{roleInherent,jdbcType=CHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isUsable != null">
        #{isUsable,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lboeri.boeriapi.dao.generator.entity.SysRoleEntity">
    update SYS_ROLE
    <set>
      <if test="roleCode != null">
        ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="funcNodeCode != null">
        FUNC_NODE_CODE = #{funcNodeCode,jdbcType=VARCHAR},
      </if>
      <if test="roleInherent != null">
        ROLE_INHERENT = #{roleInherent,jdbcType=CHAR},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isUsable != null">
        IS_USABLE = #{isUsable,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lboeri.boeriapi.dao.generator.entity.SysRoleEntity">
    update SYS_ROLE
    set ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      FUNC_NODE_CODE = #{funcNodeCode,jdbcType=VARCHAR},
      ROLE_INHERENT = #{roleInherent,jdbcType=CHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      IS_USABLE = #{isUsable,jdbcType=CHAR},
      REMARK = #{remark,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>